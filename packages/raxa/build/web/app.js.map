{"version":3,"sources":["../../src/web/app.js"],"names":["window","cetti","Cetti","start","addEventListener","data","signIn","jwt","user","company","dispatch","redirect","getState","requireAuth","nextState","replace","done","location","query","JSON","parse","opener","postMessage","close","state","Object","assign","pathname","nextPathname","name","email","open","React","createElement","store","requireNotAuth","checkInviteToken","token","console","log","loadPageData","params","pageId","loadMarketingData","App","history","path","component","onEnter"],"mappings":"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","file":"app.js","sourcesContent":["import {Provider} from 'react-redux'\nimport {Router, Route} from 'react-router'\nimport {dialog} from 'dashboard/dialog'\n\nimport {CampaignStatistics} from './components/pages/campaign-statistics'\nimport {Statistics} from './components/pages/statistics'\nimport {UserInfo} from './components/pages/user-info'\nimport {Main} from './components/main'\nimport {Register, RegisterInvite} from './components/register'\nimport {SignIn} from './components/sign-in'\nimport {StartupGuide} from './components/startup-guide'\nimport {getInvite, signedIn} from './lib/action-creators/auth'\nimport {getCampaignInsights} from './lib/action-creators/campaigns'\nimport {getPageInsights} from './lib/action-creators/insights'\nimport {getPages} from './lib/action-creators/pages'\nimport {production, history} from './lib/environment'\nimport {store, onLoaded} from './lib/store'\n\nif (window['cetti'] && production) {\n  new cetti.Cetti('bf210f31-347d-11e6-8817-dfab36344b4d').start()\n}\n\nwindow.addEventListener('message', ({data}) => {\n  if (data.signIn) {\n    const {jwt, user, company} = data.signIn\n    store.dispatch(signedIn(jwt, user, company, {redirect: false}))\n  }\n})\n\nonLoaded(() => {\n  if (store.getState().user.user) {\n    store.dispatch(getPages())\n  }\n})\n\nfunction requireAuth(nextState, replace, done) {\n  onLoaded(() => {\n    const {user, company} = store.getState().user\n    const {jwt, data} = nextState.location.query\n\n    if (jwt) {\n      const {user, company} = JSON.parse(data)\n\n      if (window.opener) {\n        window.opener.postMessage({signIn: {jwt, user, company}}, '*')\n        window.close()\n      } else {\n        store.dispatch(signedIn(jwt, user, company, {redirect: false}))\n\n        replace({\n          state: {...nextState, location: {...nextState.location, query: {}}},\n        })\n      }\n    } else if (!user) {\n      replace({\n        pathname: '/sign-in',\n        state: {nextPathname: nextState.location.pathname},\n      })\n    } else if (!user.name || !user.email || !company.name) {\n      dialog.open(<Provider store={store}><StartupGuide /></Provider>)\n    }\n    done()\n  })\n}\n\nfunction requireNotAuth(nextState, replace, done) {\n  onLoaded(() => {\n    const {user} = store.getState().user\n    if (user) {\n      replace({\n        pathname: '/',\n        state: {nextPathname: nextState.location.pathname},\n      })\n    }\n    done()\n  })\n}\n\nfunction checkInviteToken(nextState, replace) {\n  const {token} = nextState.location.query\n\n  console.log('token', token)\n\n  if (!token) {\n    replace({\n      pathname: '/register',\n      state: {...nextState, location: {...nextState.location, query: {}}},\n    })\n  } else {\n    store.dispatch(getInvite(token))\n  }\n}\n\nfunction loadPageData(nextState) {\n  store.dispatch(getPageInsights(nextState.params.pageId))\n}\n\nfunction loadMarketingData() {\n  console.log('load marketing data!!!')\n  store.dispatch(getCampaignInsights())\n}\n\nexport const App = () =>\n  <Provider store={store}>\n    <Router history={history}>\n      <Route path='/sign-in' component={SignIn} onEnter={requireNotAuth} />\n      <Route path='/register' component={Register} onEnter={requireNotAuth} />\n      <Route path='/invite' component={RegisterInvite} onEnter={checkInviteToken} />\n      <Route path='/' component={Main} onEnter={requireAuth}>\n        <Route path='/overview' component={UserInfo} />\n        <Route path='/statistics' component={Statistics}>\n          <Route path=':pageId' component={Statistics} onEnter={loadPageData} />\n        </Route>\n        <Route path='/ads' component={CampaignStatistics} onEnter={loadMarketingData} />\n        <Route path='/account' component={UserInfo} />\n      </Route>\n    </Router>\n  </Provider>\n"]}