{"version":3,"sources":["../../src/web/lib/lib/action-creators/campaigns.js","web/lib/lib/action-creators/campaigns.js"],"names":["getCampaignInsights","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","jwt","getState","user","token","dispatch","marketingInsightsResponse","json","marketingInsights","updateBucket"],"mappings":";;;;;;;;;;QAKMA,mB,GAAAA,mB;;AALN;;;;AACA;;AACA;;AACA;;;;ACHA,IAAIC,YAAa,aAAQ,UAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAAO,KAAKD,MAAMA,IAAIE,OAAV,CAAL,EAAyB,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACvD,iBAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAE,gBAAI;AAAEC,qBAAKN,UAAUO,IAAV,CAAeF,KAAf,CAAL;AAA8B,aAApC,CAAqC,OAAOG,CAAP,EAAU;AAAEL,uBAAOK,CAAP;AAAY;AAAE;AAC3F,iBAASC,QAAT,CAAkBJ,KAAlB,EAAyB;AAAE,gBAAI;AAAEC,qBAAKN,UAAU,OAAV,EAAmBK,KAAnB,CAAL;AAAkC,aAAxC,CAAyC,OAAOG,CAAP,EAAU;AAAEL,uBAAOK,CAAP;AAAY;AAAE;AAC9F,iBAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,mBAAOC,IAAP,GAAcT,QAAQQ,OAAOL,KAAf,CAAd,GAAsC,IAAIN,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAEA,wBAAQQ,OAAOL,KAAf;AAAwB,aAAnD,EAAqDO,IAArD,CAA0DR,SAA1D,EAAqEK,QAArE,CAAtC;AAAuH;AAC/IH,aAAK,CAACN,YAAYA,UAAUa,KAAV,CAAgBhB,OAAhB,EAAyBC,cAAc,EAAvC,CAAb,EAAyDS,IAAzD,EAAL;AACH,KALM,CAAP;AAMH,CAPD;ADKM,SAAAZ,mBAAA,GAAA;AAAA;;AACJ,QAAMmB,MAAM,aAAMC,QAAN,GAAiBC,IAAjB,CAAsBC,KAAlC;AAEA,WAAO,UAAMC,QAAN;AAAA,eAActB,iBAAA,KAAA,CAAA,EAAA,KAAA,CAAA,6BAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACqB,2EAAmCkB,GAAnC,CADrB;;AAAA;AACbK,qDADa;AAAA;AAAA,mCAEaA,0BAA0BC,IAA1B,EAFb;;AAAA;AAEbC,6CAFa;;AAGnBH,qCAAS,qBAAO,iBAAQI,YAAf,EAA6BD,iBAA7B,CAAT;;AAHmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA,EAAd;AAAA,KAAP;AAKD","file":"campaigns.js","sourcesContent":["import fetch from 'isomorphic-fetch'\nimport {actions, action} from '../actions'\nimport {domain} from '../environment'\nimport {store} from '../store'\n\nexport function getCampaignInsights() {\n  const jwt = store.getState().user.token\n\n  return async dispatch => {\n    const marketingInsightsResponse = await fetch(`${domain}/campaigns?token=${jwt}`)\n    const marketingInsights = await marketingInsightsResponse.json()\n    dispatch(action(actions.updateBucket, marketingInsights))\n  }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport fetch from 'isomorphic-fetch';\nimport { actions, action } from '../actions';\nimport { domain } from '../environment';\nimport { store } from '../store';\nexport function getCampaignInsights() {\n    const jwt = store.getState().user.token;\n    return (dispatch) => __awaiter(this, void 0, void 0, function* () {\n        const marketingInsightsResponse = yield fetch(`${domain}/campaigns?token=${jwt}`);\n        const marketingInsights = yield marketingInsightsResponse.json();\n        dispatch(action(actions.updateBucket, marketingInsights));\n    });\n}\n"]}