{"version":3,"sources":["../../src/web/lib/lib/store.js"],"names":["loaded","onLoadedCallbacks","reducer","buckets","campaigns","invite","pages","period","selectablePages","user","ad","menu","middlewares","logger","console","log","action","type","next","push","storeEnhancers","window","devToolsExtension","store","whitelist","forEach","callback","onLoaded"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAIA,eAAJ;AACA,IAAMC,oBAAoB,EAA1B;AAEA,IAAMC,UAAU,4BAAgB;AAC9BC,6BAD8B;AAE9BC,mCAF8B;AAG9BC,0BAH8B;AAI9BC,uBAJ8B;AAK9BC,0BAL8B;AAM9BC,2CAN8B;AAO9BC,oBAP8B;AAQ9BC,cAR8B;AAS9BC;AAT8B,CAAhB,CAAhB;AAYA,IAAMC,cAAc,sBAApB;AAEA,IAAI,wBAAJ,EAAiB;AACf,QAAMC,SAAS,SAATA,MAAS;AAAA,eAAK;AAAA,mBAAQ,kBAAM;AAChCC,wBAAQC,GAAR,CAAY,sBAAZ,EAAoCC,OAAOC,IAA3C,EAAiDD,MAAjD;AACA,uBAAOE,KAAKF,MAAL,CAAP;AACD,aAHmB;AAAA,SAAL;AAAA,KAAf;AAKAJ,gBAAYO,IAAZ,CAAiBN,MAAjB;AACD;AAED,IAAMO,iBAAiB,CAAC,wCAAmBR,WAAnB,CAAD,EAAkC,kCAAlC,CAAvB;AAEA,IAAI,4BAAeS,OAAOC,iBAA1B,EAA6C;AAC3CF,mBAAeD,IAAf,CAAoBE,OAAOC,iBAAP,EAApB;AACD;AAEM,IAAMC,wBAAQ,wBACnBrB,OADmB,EAEnB,gCAAWkB,cAAX,CAFmB,CAAd;AAKP,gCAAaG,KAAb,EAAoB,EAACC,WAAW,CAAC,QAAD,EAAW,MAAX,CAAZ,EAApB,EAAqD,YAAA;AACnDxB,aAAS,IAAT;AACAC,sBAAkBwB,OAAlB,CAA0B;AAAA,eAAYC,UAAZ;AAAA,KAA1B;AACD,CAHD;AAKO,IAAMC,8BAAW,SAAXA,QAAW,WAAQ;AAC9B,QAAI3B,MAAJ,EAAY;AACV0B;AACD,KAFD,MAEO;AACLzB,0BAAkBkB,IAAlB,CAAuBO,QAAvB;AACD;AACF,CANM","file":"store.js","sourcesContent":["import {applyMiddleware, combineReducers, createStore, compose} from 'redux'\nimport thunk from 'redux-thunk'\nimport {persistStore, autoRehydrate} from 'redux-persist'\n\nimport {buckets} from './reducers/buckets'\nimport {campaigns} from './reducers/campaigns'\nimport {invite} from './reducers/invite'\nimport {pages, selectablePages} from './reducers/pages'\nimport {period} from './reducers/period'\nimport {user} from './reducers/user'\nimport {ad} from './reducers/ad'\nimport {menu} from './reducers/menu'\nimport {production} from './environment'\n\nlet loaded\nconst onLoadedCallbacks = []\n\nconst reducer = combineReducers({\n  buckets,\n  campaigns,\n  invite,\n  pages,\n  period,\n  selectablePages,\n  user,\n  ad,\n  menu,\n})\n\nconst middlewares = [thunk]\n\nif (!production) {\n  const logger = _ => next => action => {\n    console.log('action %s dispatched', action.type, action)\n    return next(action)\n  }\n\n  middlewares.push(logger)\n}\n\nconst storeEnhancers = [applyMiddleware(...middlewares), autoRehydrate()]\n\nif (!production && window.devToolsExtension) {\n  storeEnhancers.push(window.devToolsExtension())\n}\n\nexport const store = createStore(\n  reducer,\n  compose(...storeEnhancers)\n)\n\npersistStore(store, {whitelist: ['period', 'user']}, () => {\n  loaded = true\n  onLoadedCallbacks.forEach(callback => callback())\n})\n\nexport const onLoaded = callback => {\n  if (loaded) {\n    callback()\n  } else {\n    onLoadedCallbacks.push(callback)\n  }\n}\n"]}