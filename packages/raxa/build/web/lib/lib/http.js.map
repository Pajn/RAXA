{"version":3,"sources":["../../src/web/lib/lib/http.js"],"names":["get","post","getHeaders","headers","getState","user","token","Authorization","encodeQuery","query","queryParams","Object","entries","forEach","name","value","push","encodeURIComponent","length","join","path","fetch","body","method","JSON","stringify"],"mappings":";;;;;;;;QAgCMA,G,GAAAA,G;QAMAC,I,GAAAA,I;;AAtCN;;AACA;;AAEA,SAAAC,UAAA,GAAA;AACE,QAAMC,UAAU;AACd,kBAAU,kBADI;AAEd,wBAAgB;AAFF,KAAhB;;AADF,0BAMiB,aAAMC,QAAN,EANjB;AAAA,QAMSC,IANT,mBAMSA,IANT;;AAQE,QAAIA,QAAQA,KAAKC,KAAjB,EAAwB;AACtBH,gBAAQI,aAAR,GAAwBF,KAAKC,KAA7B;AACD;AAED,WAAOH,OAAP;AACD;AAED,SAAAK,WAAA,CAAqBC,KAArB,EAA0B;AACxB,QAAI,CAACA,KAAL,EAAY,OAAO,EAAP;AAEZ,QAAMC,cAAc,EAApB;AAEAC,WAAOC,OAAP,CAAeH,KAAf,EAAsBI,OAAtB,CAA8B,gBAAc;AAAA;AAAA,YAAZC,IAAY;AAAA,YAANC,KAAM;;AAC1CL,oBAAYM,IAAZ,CAAoBF,IAApB,SAA4BG,mBAAmBF,KAAnB,CAA5B;AACD,KAFD;AAIA,QAAI,CAACL,YAAYQ,MAAjB,EAAyB,OAAO,EAAP;AAEzB,iBAAWR,YAAYS,IAAZ,CAAiB,GAAjB,CAAX;AACD;AAEK,SAAAnB,GAAA,CAAcoB,IAAd,EAA8B;AAAA,QAAVX,KAAU,uEAAF,EAAE;;AAClC,WAAOY,MAAM,sBAASD,IAAT,GAAgBZ,YAAYC,KAAZ,CAAtB,EAA0C;AAC/CN,iBAASD;AADsC,KAA1C,CAAP;AAGD;AAEK,SAAAD,IAAA,CAAemB,IAAf,EAA4C;AAAA,QAAvBE,IAAuB,uEAAhB,EAAgB;;AAAA,oFAAF,EAAE;AAAA,QAAXb,KAAW,SAAXA,KAAW;;AAChD,WAAOY,MAAM,sBAASD,IAAT,GAAgBZ,YAAYC,KAAZ,CAAtB,EAA0C;AAC/CN,iBAASD,YADsC;AAE/CqB,gBAAQ,MAFuC;AAG/CD,cAAME,KAAKC,SAAL,CAAeH,IAAf;AAHyC,KAA1C,CAAP;AAKD","file":"http.js","sourcesContent":["import {domain} from './environment'\nimport {store} from './store'\n\nfunction getHeaders() {\n  const headers = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const {user} = store.getState()\n\n  if (user && user.token) {\n    headers.Authorization = user.token\n  }\n\n  return headers\n}\n\nfunction encodeQuery(query) {\n  if (!query) return ''\n\n  const queryParams = []\n\n  Object.entries(query).forEach(([name, value]) => {\n    queryParams.push(`${name}=${encodeURIComponent(value)}`)\n  })\n\n  if (!queryParams.length) return ''\n\n  return `?${queryParams.join('&')}`\n}\n\nexport function get(path, query = {}) {\n  return fetch(domain + path + encodeQuery(query), {\n    headers: getHeaders(),\n  })\n}\n\nexport function post(path, body = {}, {query} = {}) {\n  return fetch(domain + path + encodeQuery(query), {\n    headers: getHeaders(),\n    method: 'POST',\n    body: JSON.stringify(body),\n  })\n}\n"]}