{"version":3,"sources":["../../src/web/lib/components/main.js","web/lib/components/main.js"],"names":["styles","require","InnerMain","children","user","pages","params","dispatch","store","React","createElement","fixedHeader","fixedDrawer","title","pageId","name","className","navBar","id","target","align","to","onClick","open","handleSignOut","icon","label","activeRoute","Object","values","map","isCurrentPage","page","key","subMenu","active","src","image","disabled","contextTypes","object","Main","state"],"mappings":"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","file":"main.js","sourcesContent":["import {Navigation, ExpandableNavigation} from 'dashboard/components/navigation'\nimport {dialog} from 'dashboard/dialog'\nimport {PropTypes} from 'react'\nimport {Layout, Content, Drawer, Header, Icon, Menu, MenuItem} from 'react-mdl'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router'\n\nimport {signOut} from '../lib/action-creators/auth'\nimport {classNames} from '../lib/helpers'\nimport {Avatar} from './avatar'\nimport {CompanyUsersDialog} from './company-users'\nimport {Faceplate} from './faceplate'\nimport {PeriodPicker} from './period-picker'\n\nconst styles = require('./main.scss')\n\nconst InnerMain = ({children, user, pages, params, dispatch}, {store}) =>\n  <Layout fixedHeader fixedDrawer>\n    <Header title={pages && params.pageId && pages[params.pageId] ? pages[params.pageId].name : 'Manager'}>\n      <nav className={styles.navBar}>\n        <PeriodPicker pageId={params.pageId} />\n        <button id='user-menu-button'>\n          <Avatar />\n        </button>\n        <Menu target='user-menu-button' align='right'>\n          <MenuItem><Link to='/account'>Mina sidor</Link></MenuItem>\n          <MenuItem onClick={() => dialog.open(<CompanyUsersDialog store={store} />)}>Bjud in användare</MenuItem>\n          <MenuItem onClick={() => dispatch(signOut())}>Logga ut</MenuItem>\n        </Menu>\n      </nav>\n    </Header>\n    <Drawer>\n      <Faceplate user={user} handleSignOut={() => {}} />\n      <Navigation>\n        <Link to='/overview'>\n          <Icon name='dashboard' />\n          Översikt\n        </Link>\n        <ExpandableNavigation icon='pages' label='Sidor' activeRoute='/statistics'>\n          {Object.values(pages).map(page => {\n            const isCurrentPage = pages && params.pageId && params.pageId === page.id\n\n            return (\n              <Link to={`/statistics/${page.id}`} key={page.id}\n                    className={classNames(styles.subMenu, isCurrentPage && styles.active)}>\n                <img src={page.image} />\n                {page.name}\n              </Link>\n            )\n          })}\n        </ExpandableNavigation>\n        <Link to='/ads'>\n          Annonsering\n        </Link>\n        <a disabled>\n          <Icon name='public' />\n          Omvärldsbevakning\n        </a>\n        <a disabled>\n          <Icon name='help' />\n          Kundtjänst\n        </a>\n      </Navigation>\n    </Drawer>\n    <Content>\n      {children}\n    </Content>\n  </Layout>\n\nInnerMain.contextTypes = {\n  store: PropTypes.object\n}\n\nexport const Main = connect(\n  state => ({\n    user: state.user.user,\n    pages: state.pages,\n  })\n)(InnerMain)\n","import { Navigation, ExpandableNavigation } from 'dashboard/components/navigation';\nimport { dialog } from 'dashboard/dialog';\nimport { PropTypes } from 'react';\nimport { Layout, Content, Drawer, Header, Icon, Menu, MenuItem } from 'react-mdl';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport { signOut } from '../lib/action-creators/auth';\nimport { classNames } from '../lib/helpers';\nimport { Avatar } from './avatar';\nimport { CompanyUsersDialog } from './company-users';\nimport { Faceplate } from './faceplate';\nimport { PeriodPicker } from './period-picker';\nconst styles = require('./main.scss');\nconst InnerMain = ({ children, user, pages, params, dispatch }, { store }) => React.createElement(Layout, { fixedHeader: true, fixedDrawer: true },\n    React.createElement(Header, { title: pages && params.pageId && pages[params.pageId] ? pages[params.pageId].name : 'Manager' },\n        React.createElement(\"nav\", { className: styles.navBar },\n            React.createElement(PeriodPicker, { pageId: params.pageId }),\n            React.createElement(\"button\", { id: 'user-menu-button' },\n                React.createElement(Avatar, null)),\n            React.createElement(Menu, { target: 'user-menu-button', align: 'right' },\n                React.createElement(MenuItem, null,\n                    React.createElement(Link, { to: '/account' }, \"Mina sidor\")),\n                React.createElement(MenuItem, { onClick: () => dialog.open(React.createElement(CompanyUsersDialog, { store: store })) }, \"Bjud in anv\\u00E4ndare\"),\n                React.createElement(MenuItem, { onClick: () => dispatch(signOut()) }, \"Logga ut\")))),\n    React.createElement(Drawer, null,\n        React.createElement(Faceplate, { user: user, handleSignOut: () => { } }),\n        React.createElement(Navigation, null,\n            React.createElement(Link, { to: '/overview' },\n                React.createElement(Icon, { name: 'dashboard' }),\n                \"\\u00D6versikt\"),\n            React.createElement(ExpandableNavigation, { icon: 'pages', label: 'Sidor', activeRoute: '/statistics' }, Object.values(pages).map(page => {\n                const isCurrentPage = pages && params.pageId && params.pageId === page.id;\n                return (React.createElement(Link, { to: `/statistics/${page.id}`, key: page.id, className: classNames(styles.subMenu, isCurrentPage && styles.active) },\n                    React.createElement(\"img\", { src: page.image }),\n                    page.name));\n            })),\n            React.createElement(Link, { to: '/ads' }, \"Annonsering\"),\n            React.createElement(\"a\", { disabled: true },\n                React.createElement(Icon, { name: 'public' }),\n                \"Omv\\u00E4rldsbevakning\"),\n            React.createElement(\"a\", { disabled: true },\n                React.createElement(Icon, { name: 'help' }),\n                \"Kundtj\\u00E4nst\"))),\n    React.createElement(Content, null, children));\nInnerMain.contextTypes = {\n    store: PropTypes.object\n};\nexport const Main = connect(state => ({\n    user: state.user.user,\n    pages: state.pages,\n}))(InnerMain);\n"]}