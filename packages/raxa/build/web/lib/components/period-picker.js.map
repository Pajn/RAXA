{"version":3,"sources":["../../src/web/lib/components/period-picker.js"],"names":["styles","require","dayIntervals","sevenDays","thirtyDays","threeMonths","sixMonths","dateDialog","dispatch","pageId","period","from","Date","toISOString","substring","to","today","React","createElement","title","actions","key","primary","form","onClick","close","id","onSubmit","e","preventDefault","dateFrom","dateTo","getTime","type","min","max","className","dateField","defaultValue","onChange","target","value","daysToText","when","default","toLocaleDateString","PeriodPicker","state","name","Icon","align","open"],"mappings":"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","file":"period-picker.js","sourcesContent":["import {pattern} from 'declarative-pattern'\nimport {Icon, Menu, MenuItem, Button} from 'react-mdl'\nimport {connect} from 'react-redux'\n\nimport {dialog, Dialog} from 'dashboard/dialog'\n\nimport {setGlobalPeriod} from '../lib/action-creators/period'\nimport {date, daysDiff} from '../lib/helpers'\n\nconst styles = require('./period-picker.scss')\n\nconst dayIntervals = {\n  sevenDays: 7,\n  thirtyDays: 30,\n  threeMonths: 90,\n  sixMonths: 180,\n}\n\nconst dateDialog = (dispatch, pageId, period) => {\n  let from = new Date(period.from).toISOString().substring(0, 10)\n  let to = new Date(period.to).toISOString().substring(0, 10)\n\n  const today = new Date().toISOString().substring(0, 10)\n\n  return (\n    <Dialog title='Välj datum' actions={[\n      <Button key={2} primary form='useDateRange'>Använd datum</Button>,\n      <Button key={1} onClick={dialog.close}>Avbryt</Button>,\n    ]}>\n      <form id='useDateRange' onSubmit={e => {\n        e.preventDefault()\n        if (!from || !to) return\n\n        let dateFrom = new Date(from)\n        let dateTo = new Date(to)\n\n        if (dateTo.getTime() < dateFrom.getTime()) {\n          [dateFrom, dateTo] = [dateTo, dateFrom]\n        }\n\n        dispatch(setGlobalPeriod(pageId, dateFrom, dateTo))\n        return dialog.close()\n\n      }}>\n        <label>Datum från</label>\n        <input type='date' min='2006-09-26' max={today} className={styles.dateField}\n               defaultValue={from} onChange={e => { from = e.target.value }} />\n        <label>Datum till</label>\n        <input type='date' min='2006-09-26' max={today} className={styles.dateField}\n               defaultValue={to} onChange={e => { to = e.target.value }} />\n      </form>\n    </Dialog>\n  )\n}\n\nconst daysToText = pattern()\n  .when({from: date(dayIntervals.threeMonths), to: date()}, 'Senaste 3 månaderna')\n  .when({to: date()}, ({from, to}) => `Senaste ${daysDiff(from, to)} dagarna`)\n  .default(({from, to}) =>\n    `${new Date(from).toLocaleDateString()} - ${new Date(to).toLocaleDateString()}`)\n\nexport const PeriodPicker = connect(\n  state => ({period: state.period}),\n)(({dispatch, pageId, period}) => pageId ? (\n    <div>\n      <Button id='period-menu-button'>\n        {daysToText(period)}\n        <Icon name='date_range' className={styles.Icon} />\n      </Button>\n      <Menu target='period-menu-button' align='right'>\n        <MenuItem onClick={() => dispatch(setGlobalPeriod(pageId, dayIntervals.sevenDays))}>Senaste 7 dagarna</MenuItem>\n        <MenuItem onClick={() => dispatch(setGlobalPeriod(pageId, dayIntervals.thirtyDays))}>Senaste 30 dagarna</MenuItem>\n        <MenuItem onClick={() => dispatch(setGlobalPeriod(pageId, dayIntervals.threeMonths))}>Senaste 3 månaderna</MenuItem>\n        <MenuItem onClick={() => dialog.open(dateDialog(dispatch, pageId, period))}>\n          Välj mellan två datum\n        </MenuItem>\n      </Menu>\n    </div>\n  ) : null\n)\n"]}