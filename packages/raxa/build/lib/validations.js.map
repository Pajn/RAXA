{"version":3,"sources":["../../src/lib/validations.ts"],"names":["validateInterfaces","validateDevice","validateDeviceClass","validateInterface","validateAction","joi","propertiesSchema","object","pattern","type","string","only","required","optional","boolean","modifiable","when","ref","is","then","defaultValue","min","number","max","unit","integer","properties","lazy","validateProperties","error","result","validate","joiError","Object","values","filter","prop","forEach","schema","propertiesToJoi","state","interfaces","iface","interfaceId","device","deviceClass","deviceClasses","deviceClassId","config","joiSchema","id","allow","name","pluginId","array","items","value","status","joiObject","entries","key","joiRule","numberJoiRule","undefined","action","devices","deviceId","includes","Error"],"mappings":"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","file":"validations.js","sourcesContent":["import * as joi from 'joi'\nimport {raxaError, Device, Property, Interface, DeviceClass, RaxaError, Call} from 'raxa-common'\nimport {State} from 'raxa-common/lib/state'\nimport {Modification} from '../../../common/lib/entities'\n\nexport const propertiesSchema: joi.Schema = joi.object().pattern(/^/, joi.object({\n  type: joi.string().only('string', 'integer', 'number', 'boolean', 'object').required(),\n\n  optional: joi.boolean(),\n  modifiable: joi.boolean(),\n}))\n  .when(joi.ref('type'), {is: 'string', then: joi.object({\n    defaultValue: joi.string(),\n  })})\n  .when(joi.ref('type'), {is: 'boolean', then: joi.object({\n    defaultValue: joi.boolean(),\n  })})\n  .when(joi.ref('type'), {is: 'number', then: joi.object({\n    min: joi.number(),\n    max: joi.number(),\n    unit: joi.string(),\n    defaultValue: joi.number(),\n  })})\n  .when(joi.ref('type'), {is: 'integer', then: joi.object({\n    min: joi.number().integer(),\n    max: joi.number().integer(),\n    unit: joi.string(),\n    defaultValue: joi.number().integer(),\n  })})\n  .when(joi.ref('type'), {is: 'object', then: joi.object({\n    properties: joi.lazy(() => propertiesSchema).required(),\n    defaultValue: joi.object(),\n  })})\n\nfunction validateProperties(error: RaxaError['type'], properties: {[id: string]: Property}) {\n  const result = joi.validate(properties, propertiesSchema)\n  if (result.error) {\n    throw raxaError({type: error as any, joiError: result.error})\n  }\n  Object.values(properties)\n    .filter(prop => prop.type === 'object' && prop.defaultValue)\n    .forEach(prop => {\n      const schema = propertiesToJoi(prop.properties!)\n      const result = joi.validate(prop.defaultValue, schema)\n      if (result.error) {\n        throw raxaError({type: error as any, joiError: result.error})\n      }\n    })\n}\n\nexport function validateInterfaces(state: State, interfaces: Array<string>) {\n  interfaces.forEach(iface => {\n    if (!state.interfaces[iface]) {\n      throw raxaError({type: 'missingInterface', interfaceId: iface})\n    }\n  })\n}\n\nexport function validateDevice(state: State, device: Device): Device {\n  if (device.interfaces) {\n    validateInterfaces(state, device.interfaces)\n  }\n  const deviceClass = state.deviceClasses[device.deviceClassId]\n  if (!deviceClass) {\n    throw raxaError({type: 'missingDeviceClass', deviceClassId: device.deviceClassId})\n  }\n  if (!deviceClass.config) {\n    if (device.config) throw 'no config allowed'\n    return device\n  }\n  const joiSchema = joi.object({\n    id: joi.string().allow(''),\n    name: joi.string().required(),\n    pluginId: joi.string().required(),\n    deviceClassId: joi.string().required(),\n    config: propertiesToJoi(deviceClass.config),\n    interfaces: joi.array().items(joi.string().required()),\n  })\n  const result = joi.validate(device, joiSchema)\n  if (result.error) {\n     throw raxaError({type: 'invalidDevice', joiError: result.error})\n  }\n\n  return result.value\n}\n\nexport function validateDeviceClass(state: State, deviceClass: DeviceClass) {\n  validateInterfaces(state, deviceClass.interfaces)\n  if (deviceClass.config) {\n    validateProperties('invalidDeviceClass', deviceClass.config)\n  }\n}\n\nexport function validateInterface(iface: Interface) {\n  if (iface.status) {\n    validateProperties('invalidInterface', iface.status)\n  }\n}\n\nfunction propertiesToJoi(properties: {[id: string]: Property}) {\n  const joiObject = {}\n  Object.entries(properties).forEach(([key, value]) => {\n    let joiRule\n\n    switch (value.type) {\n      case 'string':\n        joiRule = joi.string()\n        break\n      case 'integer':\n        joiRule = joi.number().integer()\n        break\n        // fall through\n      case 'number':\n        let numberJoiRule: joi.NumberSchema = joiRule || joi.number()\n        if (value.min !== undefined) {\n          numberJoiRule = numberJoiRule.min(value.min)\n        }\n        if (value.max !== undefined) {\n          numberJoiRule = numberJoiRule.max(value.max)\n        }\n\n        joiRule = numberJoiRule\n        break\n      case 'boolean':\n        joiRule = joi.boolean()\n        break\n    }\n\n    if (!value.optional) {\n      joiRule = joiRule.required()\n    }\n\n    joiObject[key] = joiRule\n  })\n\n  return joi.object(joiObject).required()\n}\n\nexport function validateAction(state: State, action: Call|Modification) {\n  const device = state.devices[action.deviceId]\n  const iface = state.interfaces[action.interfaceId]\n  if (!device) throw raxaError({type: 'missingDevice', deviceId: action.deviceId})\n  if (!iface) throw raxaError({type: 'missingInterface', interfaceId: action.interfaceId})\n  const deviceClass = state.deviceClasses[device.deviceClassId]\n  if (!(device.interfaces || deviceClass.interfaces).includes(action.interfaceId)) {\n    throw Error('Device does not implement inteface')\n  }\n}\n"]}