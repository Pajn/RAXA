{"version":3,"sources":["../../src/lib/graphql/interface.ts"],"names":["joi","InterfaceType","name","fields","id","type","pluginId","methods","status","readRules","writeRules","interfaceQueries","interfaces","validate","object","resolve","_","storage","Object","values","getState"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;;AACA;;IAAYA,G;;;;;;;;AAIL,IAAMC,wCAAgB,gCAAqB;AAChDC,UAAM,WAD0C;AAEhDC,YAAQ;AACNC,YAAI,EAACC,4BAAD,EADE;AAENC,kBAAU,EAACD,4BAAD,EAFJ;AAGNE,iBAAS,EAACF,+BAAD,EAHH;AAING,gBAAQ,EAACH,+BAAD;AAJF,KAFwC;AAShDI,eAAW,KATqC;AAUhDC,gBAAY;AAVoC,CAArB,CAAtB;AAaA,IAAMC,8CAAmB,mCAAa;AAC3CC,gBAAY;AACVP,cAAM,CAACJ,aAAD,CADI;AAEVY,kBAAUb,IAAIc,MAAJ,CAAW,EAAX,CAFA;AAGVC,eAHU,mBAGFC,CAHE,eAGuB;AAAA,gBAAjBC,OAAiB,SAAjBA,OAAiB;;AAAA;;AAC/B,mBAAOC,OAAOC,MAAP,CAAcF,QAAQG,QAAR,GAAmBR,UAAjC,CAAP;AACD;AALS;AAD+B,CAAb,CAAzB","file":"interface.js","sourcesContent":["import {GraphQLString} from 'graphql'\nimport GraphQLJSON from 'graphql-type-json'\nimport {buildQueries, buildType} from 'graphql-verified'\nimport * as joi from 'joi'\nimport {Interface} from 'raxa-common'\nimport {Context} from './context'\n\nexport const InterfaceType = buildType<Interface>({\n  name: 'Interface',\n  fields: {\n    id: {type: GraphQLString},\n    pluginId: {type: GraphQLString},\n    methods: {type: GraphQLJSON},\n    status: {type: GraphQLJSON},\n    // variables?: {[variable: string]: {}}\n  } as any,\n  readRules: false,\n  writeRules: false,\n})\n\nexport const interfaceQueries = buildQueries({\n  interfaces: {\n    type: [InterfaceType],\n    validate: joi.object({}),\n    resolve(_, {}, {storage}: Context) {\n      return Object.values(storage.getState().interfaces)\n    },\n  },\n})\n"]}