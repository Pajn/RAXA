{"version":3,"sources":["../../src/errors.ts"],"names":["raxaError","error","Object","assign","Error","JSON","stringify"],"mappings":";;;;;QAaMA,S,GAAAA,S;AAAA,SAAAA,SAAA,CAAoBC,KAApB,EAAoC;AACxC,WAAOC,OAAOC,MAAP,CAAc,IAAIC,KAAJ,CAAUC,KAAKC,SAAL,CAAeL,KAAf,CAAV,CAAd,EAAgDA,KAAhD,CAAP;AACD","file":"errors.js","sourcesContent":["export type RaxaError =\n  | {type: 'pluginNotEnabled', pluginId: string}\n  | {type: 'missingDevice', deviceId: string}\n  | {type: 'missingDeviceClass', deviceClassId: string}\n  | {type: 'missingInterface', interfaceId: string}\n  | {type: 'invalidDevice', joiError: any}\n  | {type: 'invalidInterface', joiError: any}\n  | {type: 'invalidDeviceClass', joiError: any}\n  | {type: 'missingStatus', interfaceId: string, statusId: string}\n  | {type: 'missingMethod', interfaceId: string, method: string}\n  | {type: 'invalidArguments', interfaceId: string, method: string, joiError: any}\n  | {type: 'interfaceNotImplemented', deviceId: string, interfaceId: string}\n\nexport function raxaError(error: RaxaError) {\n  return Object.assign(new Error(JSON.stringify(error)), error)\n}\n"]}